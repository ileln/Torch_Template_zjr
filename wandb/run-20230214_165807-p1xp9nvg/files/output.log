














































































100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1878/1878 [02:37<00:00, 11.92it/s]
  0%|▍                                                                                                                                                                                                                                                                                | 3/1878 [00:00<03:05, 10.13it/s]
















































































100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1878/1878 [02:38<00:00, 11.82it/s]
Epoch: 2,  LR: 0.000196, Current err test avg: 80.99196563356179

































 43%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                                                                                                                                                          | 808/1878 [01:08<01:30, 11.79it/s]
Traceback (most recent call last):
  File "/home/zhangjinrong/program/Torch_Template/main.py", line 65, in <module>
    runner.run()
  File "/home/zhangjinrong/program/Torch_Template/runner/runner.py", line 204, in run
    average_train_loss = self.train(epoch)
  File "/home/zhangjinrong/program/Torch_Template/runner/runner.py", line 103, in train
    outputs = self.model(inputs) # B * 66 * 35
  File "/home/zhangjinrong/anaconda3/envs/torch/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/zhangjinrong/program/Torch_Template/models/MSRGCN/msrgcn.py", line 194, in forward
    in_second_right = self.third_up(third_right)
  File "/home/zhangjinrong/anaconda3/envs/torch/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/zhangjinrong/anaconda3/envs/torch/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/zhangjinrong/anaconda3/envs/torch/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/zhangjinrong/program/Torch_Template/models/MSRGCN/layers.py", line 196, in forward
    y = self.do(y)
  File "/home/zhangjinrong/anaconda3/envs/torch/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/zhangjinrong/anaconda3/envs/torch/lib/python3.10/site-packages/torch/nn/modules/dropout.py", line 59, in forward
    return F.dropout(input, self.p, self.training, self.inplace)
  File "/home/zhangjinrong/anaconda3/envs/torch/lib/python3.10/site-packages/torch/nn/functional.py", line 1252, in dropout
    return _VF.dropout_(input, p, training) if inplace else _VF.dropout(input, p, training)
KeyboardInterrupt